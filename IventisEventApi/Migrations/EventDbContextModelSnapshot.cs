// <auto-generated />
using System;
using IventisEventApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IventisEventApi.Migrations
{
    [DbContext(typeof(EventDbContext))]
    partial class EventDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("IventisEventApi.Models.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87f7477c-e1e9-4d90-92c7-c577dc50cc9f"),
                            Genre = "Pop",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("95944c32-33e6-4d1a-abe2-0287500383e3"),
                            Genre = "Country",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("IventisEventApi.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3da5127b-06ee-4503-8c26-55b43bde59d2"),
                            Date = new DateOnly(2024, 6, 4),
                            Name = "Event 1",
                            VenueId = new Guid("3e454d63-80db-4dfa-a6fc-8af2a078e794")
                        },
                        new
                        {
                            Id = new Guid("322ec951-1d88-4063-8920-2fd5831aa2c8"),
                            Date = new DateOnly(2025, 6, 4),
                            Name = "Event 2",
                            VenueId = new Guid("d7ca61fb-babe-4819-8ef2-82f66b18fc50")
                        },
                        new
                        {
                            Id = new Guid("c6eb77ee-bb53-4bb3-9b70-a5e82030501d"),
                            Date = new DateOnly(2024, 6, 7),
                            Name = "Event 3",
                            VenueId = new Guid("3e454d63-80db-4dfa-a6fc-8af2a078e794")
                        });
                });

            modelBuilder.Entity("IventisEventApi.Models.EventArtist", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("EventsArtists");

                    b.HasData(
                        new
                        {
                            EventId = new Guid("3da5127b-06ee-4503-8c26-55b43bde59d2"),
                            ArtistId = new Guid("87f7477c-e1e9-4d90-92c7-c577dc50cc9f")
                        },
                        new
                        {
                            EventId = new Guid("c6eb77ee-bb53-4bb3-9b70-a5e82030501d"),
                            ArtistId = new Guid("87f7477c-e1e9-4d90-92c7-c577dc50cc9f")
                        },
                        new
                        {
                            EventId = new Guid("3da5127b-06ee-4503-8c26-55b43bde59d2"),
                            ArtistId = new Guid("95944c32-33e6-4d1a-abe2-0287500383e3")
                        },
                        new
                        {
                            EventId = new Guid("322ec951-1d88-4063-8920-2fd5831aa2c8"),
                            ArtistId = new Guid("95944c32-33e6-4d1a-abe2-0287500383e3")
                        },
                        new
                        {
                            EventId = new Guid("c6eb77ee-bb53-4bb3-9b70-a5e82030501d"),
                            ArtistId = new Guid("95944c32-33e6-4d1a-abe2-0287500383e3")
                        });
                });

            modelBuilder.Entity("IventisEventApi.Models.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BoundingBox")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e454d63-80db-4dfa-a6fc-8af2a078e794"),
                            BoundingBox = "53.228317#-0.546745#53.228295#-0.548888",
                            Capacity = 100,
                            Name = "Venue 1"
                        },
                        new
                        {
                            Id = new Guid("d7ca61fb-babe-4819-8ef2-82f66b18fc50"),
                            BoundingBox = "52.9125#-1.183384#52.909932#-1.186041",
                            Capacity = 50,
                            Name = "Venue 2"
                        });
                });

            modelBuilder.Entity("IventisEventApi.Models.Event", b =>
                {
                    b.HasOne("IventisEventApi.Models.Venue", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("IventisEventApi.Models.EventArtist", b =>
                {
                    b.HasOne("IventisEventApi.Models.Artist", "Artist")
                        .WithMany("EventArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IventisEventApi.Models.Event", "Event")
                        .WithMany("EventArtists")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("IventisEventApi.Models.Artist", b =>
                {
                    b.Navigation("EventArtists");
                });

            modelBuilder.Entity("IventisEventApi.Models.Event", b =>
                {
                    b.Navigation("EventArtists");
                });

            modelBuilder.Entity("IventisEventApi.Models.Venue", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
